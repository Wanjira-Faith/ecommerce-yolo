{"ast":null,"code":"import _slicedToArray from\"/home/wanjira/ecommerce-yolo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useSelector}from'react-redux';import{Link}from'react-router-dom';import Helmet from'../components/Helmet';import CartItem from'../components/CartItem';import Button from'../components/Button';import productData from'../assets/fake-data/products';import numberWithCommas from'../utils/numberWithCommas';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Cart=function Cart(){var cartItems=useSelector(function(state){return state.cartItems.value;});// Replace getCartItemsInfo with a function that retrieves product details based on cart items\nvar _useState=useState(productData.getCartItemsInfo(cartItems)),_useState2=_slicedToArray(_useState,2),cartProducts=_useState2[0],setCartProducts=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),totalProducts=_useState4[0],setTotalProducts=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalPrice=_useState6[0],setTotalPrice=_useState6[1];useEffect(function(){// Retrieve product details based on cart items\nsetCartProducts(productData.getCartItemsInfo(cartItems));setTotalPrice(cartItems.reduce(function(total,item){return total+Number(item.quantity)*Number(item.price);},0));setTotalProducts(cartItems.reduce(function(total,item){return total+Number(item.quantity);},0));},[cartItems]);return/*#__PURE__*/_jsxs(Helmet,{title:\"Cart\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart__info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart__info__txt\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You have \",totalProducts,\" items in your cart\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart__info__txt__price\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:numberWithCommas(Number(totalPrice))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart__info__btn\",children:[/*#__PURE__*/_jsx(Button,{size:\"block\",children:\"Checkout\"}),/*#__PURE__*/_jsx(Link,{to:\"/catalog\",children:/*#__PURE__*/_jsx(Button,{size:\"block\",children:\"Continue Shopping\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cart__list\",children:cartProducts.map(function(item,index){return/*#__PURE__*/_jsx(CartItem,{item:item},index);})})]})]});};export default Cart;","map":{"version":3,"sources":["/home/wanjira/ecommerce-yolo/src/pages/Cart.jsx"],"names":["React","useEffect","useState","useSelector","Link","Helmet","CartItem","Button","productData","numberWithCommas","Cart","cartItems","state","value","getCartItemsInfo","cartProducts","setCartProducts","totalProducts","setTotalProducts","totalPrice","setTotalPrice","reduce","total","item","Number","quantity","price","map","index"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAEjB,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,SAAN,CAAgBE,KAA3B,EAAD,CAA7B,CAEA;AACA,cAAwCX,QAAQ,CAACM,WAAW,CAACM,gBAAZ,CAA6BH,SAA7B,CAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eAEA,eAA0Cd,QAAQ,CAAC,CAAD,CAAlD,yCAAOe,aAAP,eAAsBC,gBAAtB,eAEA,eAAoChB,QAAQ,CAAC,CAAD,CAA5C,yCAAOiB,UAAP,eAAmBC,aAAnB,eAEAnB,SAAS,CAAC,UAAM,CACd;AACAe,eAAe,CAACR,WAAW,CAACM,gBAAZ,CAA6BH,SAA7B,CAAD,CAAf,CAEAS,aAAa,CAACT,SAAS,CAACU,MAAV,CAAiB,SAACC,KAAD,CAAQC,IAAR,QAAiBD,CAAAA,KAAK,CAAIE,MAAM,CAACD,IAAI,CAACE,QAAN,CAAN,CAAwBD,MAAM,CAACD,IAAI,CAACG,KAAN,CAAxD,EAAjB,CAAwF,CAAxF,CAAD,CAAb,CACAR,gBAAgB,CAACP,SAAS,CAACU,MAAV,CAAiB,SAACC,KAAD,CAAQC,IAAR,QAAiBD,CAAAA,KAAK,CAAGE,MAAM,CAACD,IAAI,CAACE,QAAN,CAA/B,EAAjB,CAAiE,CAAjE,CAAD,CAAhB,CACD,CANQ,CAMN,CAACd,SAAD,CANM,CAAT,CAQA,mBACE,MAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,4BACE,aAAK,SAAS,CAAC,MAAf,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,iCACYM,aADZ,yBADF,cAIE,aAAK,SAAS,CAAC,wBAAf,wBACE,gCADF,kBACsB,sBAAOR,gBAAgB,CAACe,MAAM,CAACL,UAAD,CAAP,CAAvB,EADtB,GAJF,GADF,cASE,aAAK,SAAS,CAAC,iBAAf,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,sBADF,cAIE,KAAC,IAAD,EAAM,EAAE,CAAC,UAAT,uBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,+BADF,EAJF,GATF,GADF,cAqBE,YAAK,SAAS,CAAC,YAAf,UAEIJ,YAAY,CAACY,GAAb,CAAiB,SAACJ,IAAD,CAAOK,KAAP,qBACf,KAAC,QAAD,EAAU,IAAI,CAAEL,IAAhB,EAA2BK,KAA3B,CADe,EAAjB,CAFJ,EArBF,GADF,GADF,CAiCD,CApDD,CAsDA,cAAelB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Helmet from '../components/Helmet';\nimport CartItem from '../components/CartItem';\nimport Button from '../components/Button';\n\nimport productData from '../assets/fake-data/products';\nimport numberWithCommas from '../utils/numberWithCommas';\n\nconst Cart = () => {\n\n  const cartItems = useSelector((state) => state.cartItems.value);\n\n  // Replace getCartItemsInfo with a function that retrieves product details based on cart items\n  const [cartProducts, setCartProducts] = useState(productData.getCartItemsInfo(cartItems));\n\n  const [totalProducts, setTotalProducts] = useState(0);\n\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    // Retrieve product details based on cart items\n    setCartProducts(productData.getCartItemsInfo(cartItems));\n\n    setTotalPrice(cartItems.reduce((total, item) => total + (Number(item.quantity) * Number(item.price)), 0));\n    setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0));\n  }, [cartItems]);\n\n  return (\n    <Helmet title=\"Cart\"> {/* Title changed to \"Cart\" */}\n      <div className=\"cart\">\n        <div className=\"cart__info\">\n          <div className=\"cart__info__txt\">\n            <p>\n              You have {totalProducts} items in your cart\n            </p>\n            <div className=\"cart__info__txt__price\">\n              <span>Total:</span> <span>{numberWithCommas(Number(totalPrice))}</span>\n            </div>\n          </div>\n          <div className=\"cart__info__btn\">\n            <Button size=\"block\">\n              Checkout\n            </Button>\n            <Link to=\"/catalog\">\n              <Button size=\"block\">\n                Continue Shopping\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"cart__list\">\n          {\n            cartProducts.map((item, index) => (\n              <CartItem item={item} key={index}/>\n            ))\n          }\n        </div>\n      </div>\n    </Helmet>\n  )\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}