{"ast":null,"code":"var _jsxFileName = \"/home/wanjira/Development/ecommerce-website/src/pages/Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Helmet from '../components/Helmet';\nimport CartItem from '../components/CartItem';\nimport Button from '../components/Button';\nimport productData from '../assets/fake-data/products';\nimport numberWithCommas from '../utils/numberWithCommas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const cartItems = useSelector(state => state.cartItems.value); // Replace getCartItemsInfo with a function that retrieves product details based on cart items\n\n  const [cartProducts, setCartProducts] = useState(productData.getCartItemsInfo(cartItems));\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    // Retrieve product details based on cart items\n    setCartProducts(productData.getCartItemsInfo(cartItems));\n    setTotalPrice(cartItems.reduce((total, item) => total + Number(item.quantity) * Number(item.price), 0));\n    setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0));\n  }, [cartItems]);\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    title: \"Cart\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart__info__txt\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You have \", totalProducts, \" items in your cart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart__info__txt__price\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: numberWithCommas(Number(totalPrice))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart__info__btn\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"block\",\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/catalog\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"block\",\n              children: \"Continue Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart__list\",\n        children: cartProducts.map((item, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"iY11sSEfW8k9g3tKSvJf5rys+6w=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/wanjira/Development/ecommerce-website/src/pages/Cart.jsx"],"names":["React","useEffect","useState","useSelector","Link","Helmet","CartItem","Button","productData","numberWithCommas","Cart","cartItems","state","value","cartProducts","setCartProducts","getCartItemsInfo","totalProducts","setTotalProducts","totalPrice","setTotalPrice","reduce","total","item","Number","quantity","price","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Helmet from '../components/Helmet';\nimport CartItem from '../components/CartItem';\nimport Button from '../components/Button';\n\nimport productData from '../assets/fake-data/products';\nimport numberWithCommas from '../utils/numberWithCommas';\n\nconst Cart = () => {\n\n  const cartItems = useSelector((state) => state.cartItems.value);\n\n  // Replace getCartItemsInfo with a function that retrieves product details based on cart items\n  const [cartProducts, setCartProducts] = useState(productData.getCartItemsInfo(cartItems));\n\n  const [totalProducts, setTotalProducts] = useState(0);\n\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    // Retrieve product details based on cart items\n    setCartProducts(productData.getCartItemsInfo(cartItems));\n\n    setTotalPrice(cartItems.reduce((total, item) => total + (Number(item.quantity) * Number(item.price)), 0));\n    setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0));\n  }, [cartItems]);\n\n  return (\n    <Helmet title=\"Cart\"> {/* Title changed to \"Cart\" */}\n      <div className=\"cart\">\n        <div className=\"cart__info\">\n          <div className=\"cart__info__txt\">\n            <p>\n              You have {totalProducts} items in your cart\n            </p>\n            <div className=\"cart__info__txt__price\">\n              <span>Total:</span> <span>{numberWithCommas(Number(totalPrice))}</span>\n            </div>\n          </div>\n          <div className=\"cart__info__btn\">\n            <Button size=\"block\">\n              Checkout\n            </Button>\n            <Link to=\"/catalog\">\n              <Button size=\"block\">\n                Continue Shopping\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"cart__list\">\n          {\n            cartProducts.map((item, index) => (\n              <CartItem item={item} key={index}/>\n            ))\n          }\n        </div>\n      </div>\n    </Helmet>\n  )\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}