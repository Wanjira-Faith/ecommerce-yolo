{"ast":null,"code":"import _slicedToArray from\"/home/wanjira/ecommerce-yolo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import Grid from'./Grid';import ProductCard from'./ProductCard';import{jsx as _jsx}from\"react/jsx-runtime\";var InfinityList=function InfinityList(props){var perLoad=6;// items each load\nvar listRef=useRef(null);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),load=_useState4[0],setLoad=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),index=_useState6[0],setIndex=_useState6[1];useEffect(function(){setData(props.data.slice(0,perLoad));setIndex(1);},[props.data]);useEffect(function(){window.addEventListener(\"scroll\",function(){if(listRef&&listRef.current){if(window.scrollY+window.innerHeight>=listRef.current.clientHeight+listRef.current.offsetTop+200){console.log(\"bottom reach\");setLoad(true);}}});},[listRef]);useEffect(function(){var getItems=function getItems(){var pages=Math.floor(props.data.length/perLoad);var maxIndex=props.data.length%perLoad===0?pages:pages+1;if(load&&index<=maxIndex){var start=perLoad*index;var end=start+perLoad;setData(data.concat(props.data.slice(start,end)));setIndex(index+1);}};getItems();setLoad(false);},[load,index,data,props.data]);return/*#__PURE__*/_jsx(\"div\",{ref:listRef,children:/*#__PURE__*/_jsx(Grid,{col:3,mdCol:2,smCol:1,gap:20,children:data.map(function(item,index){return/*#__PURE__*/_jsx(ProductCard,{img01:item.image01,img02:item.image02,name:item.title,price:Number(item.price),slug:item.slug},index);})})});};export default InfinityList;","map":{"version":3,"sources":["/home/wanjira/ecommerce-yolo/src/components/InfinityList.jsx"],"names":["React","useEffect","useRef","useState","Grid","ProductCard","InfinityList","props","perLoad","listRef","data","setData","load","setLoad","index","setIndex","slice","window","addEventListener","current","scrollY","innerHeight","clientHeight","offsetTop","console","log","getItems","pages","Math","floor","length","maxIndex","start","end","concat","map","item","image01","image02","title","Number","price","slug"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Grid from './Grid'\nimport ProductCard from './ProductCard'\n\nconst InfinityList = props => {\n\n    const perLoad = 6 // items each load\n\n    const listRef = useRef(null)\n    \n    const [data, setData] = useState([])\n\n    const [load, setLoad] = useState(true)\n\n    const [index, setIndex] = useState(0)\n\n    useEffect(() => {\n        setData(props.data.slice(0, perLoad))\n        setIndex(1)\n    }, [props.data])\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (listRef && listRef.current) {\n                if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n                    console.log(\"bottom reach\")\n                    setLoad(true)\n                }\n            }\n            \n        })\n    }, [listRef])\n\n    useEffect(() => {\n        const getItems = () => {\n            const pages = Math.floor(props.data.length / perLoad)\n            const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1\n\n            if (load && index <= maxIndex) {\n                const start = perLoad * index\n                const end = start + perLoad\n\n                setData(data.concat(props.data.slice(start, end)))\n                setIndex(index + 1)\n            }\n        }\n        getItems()\n        setLoad(false)\n    }, [load, index, data, props.data])\n\n    return (\n        <div ref={listRef}>\n            <Grid\n                col={3}\n                mdCol={2}\n                smCol={1}\n                gap={20}\n            >\n                {\n                    data.map((item, index) => (\n                        <ProductCard\n                            key={index}\n                            img01={item.image01}\n                            img02={item.image02}\n                            name={item.title}\n                            price={Number(item.price)}\n                            slug={item.slug}\n                        />\n                    ))\n                }\n            </Grid>\n        </div>\n    )\n}\n\nInfinityList.propTypes = {\n    data: PropTypes.array.isRequired\n}\n\nexport default InfinityList\n"]},"metadata":{},"sourceType":"module"}